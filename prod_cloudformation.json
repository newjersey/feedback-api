{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "RatingLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/feedback-api-prod-rating"
      }
    },
    "CommentLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/feedback-api-prod-comment"
      }
    },
    "EmailLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/feedback-api-prod-email"
      }
    },
    "SummaryLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/feedback-api-prod-summary"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "feedback-api",
                  "prod",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/feedback-api-prod*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/feedback-api-prod*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "comprehend:DetectPiiEntities"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "feedback-api",
              "prod",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "RatingLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/feedback-api/prod/1708101082229-2024-02-16T16:31:22.229Z/rating.zip"
        },
        "Handler": "src/functions/rating/handler.main",
        "Runtime": "nodejs18.x",
        "FunctionName": "feedback-api-prod-rating",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
            "SHEET_ID": "1xVcVYq9DNltPIu0q2w0UchvtN643LGAu0Okv1VtynSo",
            "GOOGLE_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQC8jjExO9ponCox\\nMNYq6bwRDVm6gPQronnELcrWkekiEBTXUgiPjLHRtRnUi3y3+5w/16ySsYVvx1T7\\nkl5QuyvkH7QupPEqo1kbKTny1Aj6sapcHbNpfRtqlxAk99G7yuC9IU2JJ+4eC6Ux\\nERu9KqgW3XVQBEUVChz6CGOK91ABz8WsrzKv1pkY4u+FdNY9BUY0ZWKMhAB7iqDB\\nT9FJp5VQEqtaqB5qTSWGxQeK5tXOGtgF2yrnLim2PZgoOSEU/u0Qq2JyIVXKJa5x\\nQsrlO2dAIIfdkEZrev6sb+BKYWuf7TYPrsuKUi53ciWw4U0tH1bUZgksLdEU+VlU\\ngndVAk7hAgMBAAECggEAFcyXVFqtSWXbR5JJWG8Vvp+dWD9wu0YOr4cfHx0sZ7NA\\nmD+UMiBxLc5dvPcexViSERwlXVT9GSthoFok4aQvaAbgT8+NpZZ6sUtcDJPGBqcZ\\nYTVP2Ooits6IinWaP7dYsepSlVZSpGedQrsjIATOp8y/s4S4MJKu6fCkAtzNLlWS\\nX2TKlz6xApg/2DYqy0QC2FH7UvjhgWLHmXgo4wBQkn5o7aPHex41tD5kLgJIFeJA\\ntZMLoGuif9F4PAH8cX94hL0ipW9gnN0p4ff4eRxBwyPjuvLSKxevJ+oV95QF4Weq\\no/h4P+rbos2o8XRn6xOjEe0gn/EkckQcbtI2PcaajwKBgQDpVgFmk6bfvzK0OVC9\\nc8MccnsHwadQr3XZw5czqRRqshwTd1nfDg8C44Iuc6IIZ5vmQxP51U/0dKfsFtVE\\ndb6my3WEyobUGu5IznGVSbA8NbIVhYsqYDtcGEciRx7v9lb+WB/JOjXdtTqmuGl2\\nT9VPSl4mvI5pWfd/kOOg3RZodwKBgQDO3rNciEMb+J1YvRjLeNiKY5IO5YwJk+In\\nP4BwJ86VnFYhFyaWqJ4tAaAkh6KR5UEIJSQTwUKCD8zeDR07Nywoxz8cSzYt85v3\\nsZCNzmzNqXrENzdrnaAW0f4pwSwZtcydDp5vzG1Opar46QyjBi/MzElVkEZNBOi+\\n44K8aFyxZwKBgQDJKwMuIqI+SSM3yipYC9PtVK3JdCYCJCPgyQY03dLiYgheqAlt\\niztZ7DeyQLMzt8/q523zePrj8SdNHipkSXdDaio5gDpZ55YEYyf943fzkP+mGmpu\\n8GR889lwLgz4KVO7GNLetDb4nGSilF8oR4/KOn2NvAazwYLmEk6Nw86r5QKBgQCa\\nu8D1KYbo2SD4SxjMuOtfN/L76X7Bezfhm4H6YgwHpBRYU/StJBqMF3ctW7ah4hSu\\nfvlpPVj958uZG74NmMsTBVWTWD6CSIEU2GADca+4dVg6hAKUICaqaw/tM2xFHtKZ\\nd2HSxdnMxeYIoGivV+VRDkycD3pGCbH9djdHrdgHaQKBgQDHrOOxbzxr2UMFKGlt\\nR6SU1HjBYz4jPVq9FLczLL3z9dKwkaDOGPu2bCgHaKPYXQNEnHN4+NyYgSeirSeW\\nSKwW6G8RFI7RnqeN4hQJXp6J3dHxtZH/ZgnvCk+jr3BozB2mFrKRskI5oWzCTPdj\\niuVZ+mPvWUBXhmBcNJtipBPXmQ==\\n-----END PRIVATE KEY-----\\n",
            "CLIENT_EMAIL": "serverlessfunction@feedback-prototype.iam.gserviceaccount.com",
            "AZURE_OPENAI_ENDPOINT": "https://resx-feedback.openai.azure.com/",
            "AZURE_OPENAI_KEY": "2efafc72ad89423983b198e3aaf6e3e2"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "RatingLogGroup"
      ]
    },
    "CommentLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/feedback-api/prod/1708101082229-2024-02-16T16:31:22.229Z/comment.zip"
        },
        "Handler": "src/functions/comment/handler.main",
        "Runtime": "nodejs18.x",
        "FunctionName": "feedback-api-prod-comment",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
            "SHEET_ID": "1xVcVYq9DNltPIu0q2w0UchvtN643LGAu0Okv1VtynSo",
            "GOOGLE_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQC8jjExO9ponCox\\nMNYq6bwRDVm6gPQronnELcrWkekiEBTXUgiPjLHRtRnUi3y3+5w/16ySsYVvx1T7\\nkl5QuyvkH7QupPEqo1kbKTny1Aj6sapcHbNpfRtqlxAk99G7yuC9IU2JJ+4eC6Ux\\nERu9KqgW3XVQBEUVChz6CGOK91ABz8WsrzKv1pkY4u+FdNY9BUY0ZWKMhAB7iqDB\\nT9FJp5VQEqtaqB5qTSWGxQeK5tXOGtgF2yrnLim2PZgoOSEU/u0Qq2JyIVXKJa5x\\nQsrlO2dAIIfdkEZrev6sb+BKYWuf7TYPrsuKUi53ciWw4U0tH1bUZgksLdEU+VlU\\ngndVAk7hAgMBAAECggEAFcyXVFqtSWXbR5JJWG8Vvp+dWD9wu0YOr4cfHx0sZ7NA\\nmD+UMiBxLc5dvPcexViSERwlXVT9GSthoFok4aQvaAbgT8+NpZZ6sUtcDJPGBqcZ\\nYTVP2Ooits6IinWaP7dYsepSlVZSpGedQrsjIATOp8y/s4S4MJKu6fCkAtzNLlWS\\nX2TKlz6xApg/2DYqy0QC2FH7UvjhgWLHmXgo4wBQkn5o7aPHex41tD5kLgJIFeJA\\ntZMLoGuif9F4PAH8cX94hL0ipW9gnN0p4ff4eRxBwyPjuvLSKxevJ+oV95QF4Weq\\no/h4P+rbos2o8XRn6xOjEe0gn/EkckQcbtI2PcaajwKBgQDpVgFmk6bfvzK0OVC9\\nc8MccnsHwadQr3XZw5czqRRqshwTd1nfDg8C44Iuc6IIZ5vmQxP51U/0dKfsFtVE\\ndb6my3WEyobUGu5IznGVSbA8NbIVhYsqYDtcGEciRx7v9lb+WB/JOjXdtTqmuGl2\\nT9VPSl4mvI5pWfd/kOOg3RZodwKBgQDO3rNciEMb+J1YvRjLeNiKY5IO5YwJk+In\\nP4BwJ86VnFYhFyaWqJ4tAaAkh6KR5UEIJSQTwUKCD8zeDR07Nywoxz8cSzYt85v3\\nsZCNzmzNqXrENzdrnaAW0f4pwSwZtcydDp5vzG1Opar46QyjBi/MzElVkEZNBOi+\\n44K8aFyxZwKBgQDJKwMuIqI+SSM3yipYC9PtVK3JdCYCJCPgyQY03dLiYgheqAlt\\niztZ7DeyQLMzt8/q523zePrj8SdNHipkSXdDaio5gDpZ55YEYyf943fzkP+mGmpu\\n8GR889lwLgz4KVO7GNLetDb4nGSilF8oR4/KOn2NvAazwYLmEk6Nw86r5QKBgQCa\\nu8D1KYbo2SD4SxjMuOtfN/L76X7Bezfhm4H6YgwHpBRYU/StJBqMF3ctW7ah4hSu\\nfvlpPVj958uZG74NmMsTBVWTWD6CSIEU2GADca+4dVg6hAKUICaqaw/tM2xFHtKZ\\nd2HSxdnMxeYIoGivV+VRDkycD3pGCbH9djdHrdgHaQKBgQDHrOOxbzxr2UMFKGlt\\nR6SU1HjBYz4jPVq9FLczLL3z9dKwkaDOGPu2bCgHaKPYXQNEnHN4+NyYgSeirSeW\\nSKwW6G8RFI7RnqeN4hQJXp6J3dHxtZH/ZgnvCk+jr3BozB2mFrKRskI5oWzCTPdj\\niuVZ+mPvWUBXhmBcNJtipBPXmQ==\\n-----END PRIVATE KEY-----\\n",
            "CLIENT_EMAIL": "serverlessfunction@feedback-prototype.iam.gserviceaccount.com",
            "AZURE_OPENAI_ENDPOINT": "https://resx-feedback.openai.azure.com/",
            "AZURE_OPENAI_KEY": "2efafc72ad89423983b198e3aaf6e3e2"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CommentLogGroup"
      ]
    },
    "EmailLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/feedback-api/prod/1708101082229-2024-02-16T16:31:22.229Z/email.zip"
        },
        "Handler": "src/functions/email/handler.main",
        "Runtime": "nodejs18.x",
        "FunctionName": "feedback-api-prod-email",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
            "SHEET_ID": "1xVcVYq9DNltPIu0q2w0UchvtN643LGAu0Okv1VtynSo",
            "GOOGLE_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQC8jjExO9ponCox\\nMNYq6bwRDVm6gPQronnELcrWkekiEBTXUgiPjLHRtRnUi3y3+5w/16ySsYVvx1T7\\nkl5QuyvkH7QupPEqo1kbKTny1Aj6sapcHbNpfRtqlxAk99G7yuC9IU2JJ+4eC6Ux\\nERu9KqgW3XVQBEUVChz6CGOK91ABz8WsrzKv1pkY4u+FdNY9BUY0ZWKMhAB7iqDB\\nT9FJp5VQEqtaqB5qTSWGxQeK5tXOGtgF2yrnLim2PZgoOSEU/u0Qq2JyIVXKJa5x\\nQsrlO2dAIIfdkEZrev6sb+BKYWuf7TYPrsuKUi53ciWw4U0tH1bUZgksLdEU+VlU\\ngndVAk7hAgMBAAECggEAFcyXVFqtSWXbR5JJWG8Vvp+dWD9wu0YOr4cfHx0sZ7NA\\nmD+UMiBxLc5dvPcexViSERwlXVT9GSthoFok4aQvaAbgT8+NpZZ6sUtcDJPGBqcZ\\nYTVP2Ooits6IinWaP7dYsepSlVZSpGedQrsjIATOp8y/s4S4MJKu6fCkAtzNLlWS\\nX2TKlz6xApg/2DYqy0QC2FH7UvjhgWLHmXgo4wBQkn5o7aPHex41tD5kLgJIFeJA\\ntZMLoGuif9F4PAH8cX94hL0ipW9gnN0p4ff4eRxBwyPjuvLSKxevJ+oV95QF4Weq\\no/h4P+rbos2o8XRn6xOjEe0gn/EkckQcbtI2PcaajwKBgQDpVgFmk6bfvzK0OVC9\\nc8MccnsHwadQr3XZw5czqRRqshwTd1nfDg8C44Iuc6IIZ5vmQxP51U/0dKfsFtVE\\ndb6my3WEyobUGu5IznGVSbA8NbIVhYsqYDtcGEciRx7v9lb+WB/JOjXdtTqmuGl2\\nT9VPSl4mvI5pWfd/kOOg3RZodwKBgQDO3rNciEMb+J1YvRjLeNiKY5IO5YwJk+In\\nP4BwJ86VnFYhFyaWqJ4tAaAkh6KR5UEIJSQTwUKCD8zeDR07Nywoxz8cSzYt85v3\\nsZCNzmzNqXrENzdrnaAW0f4pwSwZtcydDp5vzG1Opar46QyjBi/MzElVkEZNBOi+\\n44K8aFyxZwKBgQDJKwMuIqI+SSM3yipYC9PtVK3JdCYCJCPgyQY03dLiYgheqAlt\\niztZ7DeyQLMzt8/q523zePrj8SdNHipkSXdDaio5gDpZ55YEYyf943fzkP+mGmpu\\n8GR889lwLgz4KVO7GNLetDb4nGSilF8oR4/KOn2NvAazwYLmEk6Nw86r5QKBgQCa\\nu8D1KYbo2SD4SxjMuOtfN/L76X7Bezfhm4H6YgwHpBRYU/StJBqMF3ctW7ah4hSu\\nfvlpPVj958uZG74NmMsTBVWTWD6CSIEU2GADca+4dVg6hAKUICaqaw/tM2xFHtKZ\\nd2HSxdnMxeYIoGivV+VRDkycD3pGCbH9djdHrdgHaQKBgQDHrOOxbzxr2UMFKGlt\\nR6SU1HjBYz4jPVq9FLczLL3z9dKwkaDOGPu2bCgHaKPYXQNEnHN4+NyYgSeirSeW\\nSKwW6G8RFI7RnqeN4hQJXp6J3dHxtZH/ZgnvCk+jr3BozB2mFrKRskI5oWzCTPdj\\niuVZ+mPvWUBXhmBcNJtipBPXmQ==\\n-----END PRIVATE KEY-----\\n",
            "CLIENT_EMAIL": "serverlessfunction@feedback-prototype.iam.gserviceaccount.com",
            "AZURE_OPENAI_ENDPOINT": "https://resx-feedback.openai.azure.com/",
            "AZURE_OPENAI_KEY": "2efafc72ad89423983b198e3aaf6e3e2"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "EmailLogGroup"
      ]
    },
    "SummaryLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/feedback-api/prod/1708101082229-2024-02-16T16:31:22.229Z/summary.zip"
        },
        "Handler": "src/functions/summary/handler.main",
        "Runtime": "nodejs18.x",
        "FunctionName": "feedback-api-prod-summary",
        "MemorySize": 1024,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps --stack-trace-limit=1000",
            "SHEET_ID": "1xVcVYq9DNltPIu0q2w0UchvtN643LGAu0Okv1VtynSo",
            "GOOGLE_PRIVATE_KEY": "-----BEGIN PRIVATE KEY-----\\nMIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQC8jjExO9ponCox\\nMNYq6bwRDVm6gPQronnELcrWkekiEBTXUgiPjLHRtRnUi3y3+5w/16ySsYVvx1T7\\nkl5QuyvkH7QupPEqo1kbKTny1Aj6sapcHbNpfRtqlxAk99G7yuC9IU2JJ+4eC6Ux\\nERu9KqgW3XVQBEUVChz6CGOK91ABz8WsrzKv1pkY4u+FdNY9BUY0ZWKMhAB7iqDB\\nT9FJp5VQEqtaqB5qTSWGxQeK5tXOGtgF2yrnLim2PZgoOSEU/u0Qq2JyIVXKJa5x\\nQsrlO2dAIIfdkEZrev6sb+BKYWuf7TYPrsuKUi53ciWw4U0tH1bUZgksLdEU+VlU\\ngndVAk7hAgMBAAECggEAFcyXVFqtSWXbR5JJWG8Vvp+dWD9wu0YOr4cfHx0sZ7NA\\nmD+UMiBxLc5dvPcexViSERwlXVT9GSthoFok4aQvaAbgT8+NpZZ6sUtcDJPGBqcZ\\nYTVP2Ooits6IinWaP7dYsepSlVZSpGedQrsjIATOp8y/s4S4MJKu6fCkAtzNLlWS\\nX2TKlz6xApg/2DYqy0QC2FH7UvjhgWLHmXgo4wBQkn5o7aPHex41tD5kLgJIFeJA\\ntZMLoGuif9F4PAH8cX94hL0ipW9gnN0p4ff4eRxBwyPjuvLSKxevJ+oV95QF4Weq\\no/h4P+rbos2o8XRn6xOjEe0gn/EkckQcbtI2PcaajwKBgQDpVgFmk6bfvzK0OVC9\\nc8MccnsHwadQr3XZw5czqRRqshwTd1nfDg8C44Iuc6IIZ5vmQxP51U/0dKfsFtVE\\ndb6my3WEyobUGu5IznGVSbA8NbIVhYsqYDtcGEciRx7v9lb+WB/JOjXdtTqmuGl2\\nT9VPSl4mvI5pWfd/kOOg3RZodwKBgQDO3rNciEMb+J1YvRjLeNiKY5IO5YwJk+In\\nP4BwJ86VnFYhFyaWqJ4tAaAkh6KR5UEIJSQTwUKCD8zeDR07Nywoxz8cSzYt85v3\\nsZCNzmzNqXrENzdrnaAW0f4pwSwZtcydDp5vzG1Opar46QyjBi/MzElVkEZNBOi+\\n44K8aFyxZwKBgQDJKwMuIqI+SSM3yipYC9PtVK3JdCYCJCPgyQY03dLiYgheqAlt\\niztZ7DeyQLMzt8/q523zePrj8SdNHipkSXdDaio5gDpZ55YEYyf943fzkP+mGmpu\\n8GR889lwLgz4KVO7GNLetDb4nGSilF8oR4/KOn2NvAazwYLmEk6Nw86r5QKBgQCa\\nu8D1KYbo2SD4SxjMuOtfN/L76X7Bezfhm4H6YgwHpBRYU/StJBqMF3ctW7ah4hSu\\nfvlpPVj958uZG74NmMsTBVWTWD6CSIEU2GADca+4dVg6hAKUICaqaw/tM2xFHtKZ\\nd2HSxdnMxeYIoGivV+VRDkycD3pGCbH9djdHrdgHaQKBgQDHrOOxbzxr2UMFKGlt\\nR6SU1HjBYz4jPVq9FLczLL3z9dKwkaDOGPu2bCgHaKPYXQNEnHN4+NyYgSeirSeW\\nSKwW6G8RFI7RnqeN4hQJXp6J3dHxtZH/ZgnvCk+jr3BozB2mFrKRskI5oWzCTPdj\\niuVZ+mPvWUBXhmBcNJtipBPXmQ==\\n-----END PRIVATE KEY-----\\n",
            "CLIENT_EMAIL": "serverlessfunction@feedback-prototype.iam.gserviceaccount.com",
            "AZURE_OPENAI_ENDPOINT": "https://resx-feedback.openai.azure.com/",
            "AZURE_OPENAI_KEY": "2efafc72ad89423983b198e3aaf6e3e2"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SummaryLogGroup"
      ]
    },
    "RatingLambdaVersionCy2xajgPl2j9IlXzbibrUbF8qZalc4m9F55edE": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RatingLambdaFunction"
        },
        "CodeSha256": "b/yyGBKM/ZMqvaF/LgzpXEhzuxDpaALdRRsbVstc0aw="
      }
    },
    "EmailLambdaVersionqeH3iUFYvcfdjOBf6NR4gythInzAP1RBb9XkUpYUOYg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "EmailLambdaFunction"
        },
        "CodeSha256": "pgjmoKMqVfVn8rfhLEv/ZYYRzSiKbGhDaSLvwjDU3XM="
      }
    },
    "SummaryLambdaVersionWB0kFPBidOV5p5NUXJ854F9WZhzn45WXOPFZwdW9tEM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SummaryLambdaFunction"
        },
        "CodeSha256": "JlfH70xnWEJ5RZwXJbjjJs93UG4pVYy2QdptxQic+1c="
      }
    },
    "CommentLambdaVersion0fVURXeNZTApQOySdyfUIbq48rvZ6nY7oZGarep6c": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CommentLambdaFunction"
        },
        "CodeSha256": "HChRanSFNWGid+bWzRrZpzMTbBi/qa9/z+kOBT2JmXU="
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "feedback-api-prod",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": "",
        "MinimumCompressionSize": 1024
      }
    },
    "ApiGatewayResourceRating": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "rating",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceComment": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "comment",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceEmail": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "email",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceSummary": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "summary",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodRatingOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceRating"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodCommentOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceComment"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodEmailOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceEmail"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodSummaryOptions": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "MethodResponses": [
          {
            "StatusCode": "200",
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true
            },
            "ResponseModels": {}
          }
        ],
        "RequestParameters": {},
        "Integration": {
          "Type": "MOCK",
          "RequestTemplates": {
            "application/json": "{statusCode:200}"
          },
          "ContentHandling": "CONVERT_TO_TEXT",
          "IntegrationResponses": [
            {
              "StatusCode": "200",
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
              },
              "ResponseTemplates": {
                "application/json": ""
              }
            }
          ]
        },
        "ResourceId": {
          "Ref": "ApiGatewayResourceSummary"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodRatingPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceRating"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "RatingLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayFeedbackapiRequestValidator"
        },
        "RequestModels": {
          "application/json": {
            "Ref": "ApiGatewayMethodRatingPostApplicationJsonModel"
          }
        }
      },
      "DependsOn": [
        "RatingLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodCommentPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceComment"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CommentLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayFeedbackapiRequestValidator"
        },
        "RequestModels": {
          "application/json": {
            "Ref": "ApiGatewayMethodCommentPostApplicationJsonModel"
          }
        }
      },
      "DependsOn": [
        "CommentLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodEmailPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceEmail"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "EmailLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayFeedbackapiRequestValidator"
        },
        "RequestModels": {
          "application/json": {
            "Ref": "ApiGatewayMethodEmailPostApplicationJsonModel"
          }
        }
      },
      "DependsOn": [
        "EmailLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayMethodSummaryPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceSummary"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "SummaryLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [],
        "RequestValidatorId": {
          "Ref": "ApiGatewayFeedbackapiRequestValidator"
        },
        "RequestModels": {
          "application/json": {
            "Ref": "ApiGatewayMethodSummaryPostApplicationJsonModel"
          }
        }
      },
      "DependsOn": [
        "SummaryLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayFeedbackapiRequestValidator": {
      "Type": "AWS::ApiGateway::RequestValidator",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ValidateRequestBody": true,
        "ValidateRequestParameters": true,
        "Name": "feedback-api-prod | Validate request body and querystring parameters"
      }
    },
    "ApiGatewayMethodRatingPostApplicationJsonModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ContentType": "application/json",
        "Schema": {
          "type": "object",
          "properties": {
            "pageURL": {
              "type": "string"
            },
            "rating": {
              "type": "boolean"
            }
          },
          "required": [
            "pageURL",
            "rating"
          ]
        }
      }
    },
    "ApiGatewayMethodCommentPostApplicationJsonModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ContentType": "application/json",
        "Schema": {
          "type": "object",
          "properties": {
            "comment": {
              "type": "string"
            },
            "feedbackId": {
              "type": "number"
            },
            "pageURL": {
              "type": "string"
            },
            "rating": {
              "type": "boolean"
            }
          },
          "required": [
            "comment"
          ]
        }
      }
    },
    "ApiGatewayMethodEmailPostApplicationJsonModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ContentType": "application/json",
        "Schema": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string"
            },
            "feedbackId": {
              "type": "number"
            }
          },
          "required": [
            "email",
            "feedbackId"
          ]
        }
      }
    },
    "ApiGatewayMethodSummaryPostApplicationJsonModel": {
      "Type": "AWS::ApiGateway::Model",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ContentType": "application/json",
        "Schema": {
          "type": "object",
          "properties": {
            "pageURL": {
              "type": "string"
            }
          },
          "required": [
            "pageURL"
          ]
        }
      }
    },
    "ApiGatewayDeployment1708101079446": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "prod"
      },
      "DependsOn": [
        "ApiGatewayMethodRatingOptions",
        "ApiGatewayMethodCommentOptions",
        "ApiGatewayMethodEmailOptions",
        "ApiGatewayMethodSummaryOptions",
        "ApiGatewayMethodRatingPost",
        "ApiGatewayMethodCommentPost",
        "ApiGatewayMethodEmailPost",
        "ApiGatewayMethodSummaryPost"
      ]
    },
    "RatingLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RatingLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "CommentLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "CommentLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "EmailLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "EmailLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "SummaryLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SummaryLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-feedback-api-prod-ServerlessDeploymentBucketName"
      }
    },
    "RatingLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RatingLambdaVersionCy2xajgPl2j9IlXzbibrUbF8qZalc4m9F55edE"
      },
      "Export": {
        "Name": "sls-feedback-api-prod-RatingLambdaFunctionQualifiedArn"
      }
    },
    "EmailLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "EmailLambdaVersionqeH3iUFYvcfdjOBf6NR4gythInzAP1RBb9XkUpYUOYg"
      },
      "Export": {
        "Name": "sls-feedback-api-prod-EmailLambdaFunctionQualifiedArn"
      }
    },
    "SummaryLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SummaryLambdaVersionWB0kFPBidOV5p5NUXJ854F9WZhzn45WXOPFZwdW9tEM"
      },
      "Export": {
        "Name": "sls-feedback-api-prod-SummaryLambdaFunctionQualifiedArn"
      }
    },
    "CommentLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CommentLambdaVersion0fVURXeNZTApQOySdyfUIbq48rvZ6nY7oZGarep6c"
      },
      "Export": {
        "Name": "sls-feedback-api-prod-CommentLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/prod"
          ]
        ]
      },
      "Export": {
        "Name": "sls-feedback-api-prod-ServiceEndpoint"
      }
    }
  }
}